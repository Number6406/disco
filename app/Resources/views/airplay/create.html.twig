{% block title %}Création d'Airplay{% endblock %}
{% extends 'base.html.twig' %}


{% block body %}


	<fieldset>
		<legend>Création d'Airplay</legend>
		<form id="addCd">
			<input type="text" id="newCD"><button type="submit" class="btn btn-info">Ajouter le CD</button>
		</form>
		<div class="row">
			<form method="post" action="{{path('createAirplay')}}" id="types_table">
				<div class="col-md-8">
					<table class="table table-striped">
						<tr>
						{% for type in types %}
								<td><label for="type_{{type.getLibelle}}">{{type.getLibelle}}</label>
									<input type="checkbox" name="type[{{type.getType}}]" value="{{type.getType}}" id="type_{{type.getLibelle}}" {% if types_check and types_check[type.getType] is defined %}checked{% endif %}></td>
						{% endfor %}
						</tr>
					</table>
				</div>
				<div class="col-md-4">
					<label for="datepicker">Depuis le </label>
					<input class="datepicker" id="datepicker" name="date"></input>
					<button type="submit" class="btn btn-info">Générer l'Airplay</button>
				</div>
			</form>
		</div>
		{% form_theme form 'bootstrap_3_layout.html.twig' %}
		{{form_start(form,{'attr': {'id': 'airplay_form'}})}}
			{{form_errors(form)}}
			<input type="text" name="classement" id="classement" class="hidden">
			<div class="row">
				<div class="col-xs-10">
					{{form_row(form.libelle,{'label':'Titre de l\'airplay'})}}
				</div>
			</div>
			<div class="row">
				<div class="table-responsive">
					<table class="table table-striped" id="sort_A">
						<thead>
							<th>#</th>
							<th>Pochette</th>
							<th>cd</th>
							<th>Artiste</th>
							<th>Titre</th>
							<th>Lien d'écoute</th>
							<th>Année</th>
							<th>Rotation</th>
							<th>Note</th>
							<th>Star</th>
							<th>Rivendel</th>
							<th>Anim</th>
							<th>Genre</th>
							<th>Type</th>
							<th>Action</th>
						</thead>
						{% set ordre = 1 %}
						<tbody>
						{% if generation %}
							{% for cd in generation %}
							<tr id="row_{{cd.cd}}">
								<td class="num_row_airplay visible">{{ordre}}</td>
								<td></td>
								<td class="num_cd">{{cd.cd}}</td>
								<td>{{cd.artiste.libelle}}</td>
								<td>{{cd.titre}}</td>
								<td><input type="text" name="ecoute[{{cd.cd}}]" {% if cd.ecoute %}value="{{cd.ecoute}}"{% endif %}></td>
								<td>{{cd.annee}}</td>
								<td>{% if cd.rotation and cd.rotation.rotation %}{{cd.rotation.libelle}}{% endif %}</td>
								<td>{% if cd.notemoy %}{{cd.notemoy|round(1,'ceil')}}{% endif %}</td>
								<td>{% set star = 0 %}{% for piste in cd.pistes %}{% if piste.star > 0 %}{% set star = star+1 %}{% endif %}{% endfor %}{{star}}</td>
								<td>{% set paulo = 0 %}{% for piste in cd.pistes %}{% if piste.paulo > 0 %}{% set paulo = paulo+1 %}{% endif %}{% endfor %}{{paulo}}</td>
								<td>{% set anim = 0 %}{% for piste in cd.pistes %}{% if piste.anim > 0 %}{% set anim = anim+1 %}{% endif %}{% endfor %}{{anim}}</td>
								<td>{{cd.genre.libelle}}</td>
								<td>{% if cd.type and cd.type.type %}{{cd.type.libelle}}{% endif %}</td>
								<td><a onclick="deleteRow({{cd.cd}})" class="btn btn-danger"><span class="glyphicon glyphicon-remove"></span></a></td>
							</tr>
							{% set ordre = ordre+1 %}
							{% endfor %}
						{% endif %}
						</tbody>
					</table>
				</div>
			</div>
		{{form_end(form)}}
	</fieldset>

{% endblock %}
{% block javascripts %}
	<script type="text/javascript">
		function classer() {
			var num = 1;
			$("#sort_A .num_row_airplay").each(function() {
				$(this).html(num);
				num++;
			})
		}

		$("#sort_A tbody").sortable({
			update: classer
		});

		$(".datepicker").datepicker({
		    format: 'dd/mm/yyyy',
		    endDate: '-0d'
		});
		var date_mini = "{{date_mini|date('d/m/Y')}}";
		$(".datepicker").datepicker('setDate',date_mini);

		$( "#newCD" ).autocomplete({
	      source: "{{path('autocompleteTitre',{'like':1})}}",
	      minLength: 2,
	      delay: 300,
	      select: function( event, ui ) {
	        	$("#newCD").text(ui.item.libelle);
	    	},
	      create : function( event, ui ){$(".ui-helper-hidden-accessible").remove();}
	    });

		$("#addCd").submit(function(event) {
			var id = $("#newCD").val();
			var new_row = "<tr class='ui-sortable-handle' id='row_:id'><td class='num_row_airplay'></td><td></td><td class='num_cd'>:id</td><td>:artiste</td><td>:titre</td><td><input type='text' name='ecoute[NNN]' value=':ecoute'></td><td>:annee</td><td>:rotation</td><td>:note</td><td>:star</td><td>:paulo</td><td>:anim</td><td>:genre</td><td>:type</td><td><button onclick='deleteRow(:id)' class='btn btn-danger'><span class='glyphicon glyphicon-remove'></span></button></td></tr>";
			var route = Routing.generate('getInfosCd', {'id': id})
			$.get(route, function(cd){
				if(cd == null) {
					alert( "Cd CD ne peut pas être ajouté à la liste (déjà présent dans un airplay, ou supprimé)." );
				} else {
					if ($("#row_"+cd.cd).length == 0) {
							new_row = new_row.replace(/:id/g,cd.cd).replace(':artiste',cd.artiste).replace(':titre',cd.titre).replace(':annee',cd.annee).replace(':rotation',cd.rotation).replace(':note',cd.note).replace(':star',cd.star).replace(':paulo',cd.paulo).replace(':anim',cd.anim).replace(':genre',cd.genre).replace(':type', cd.type).replace(':ecoute',cd.ecoute);
							$("#sort_A tbody").prepend(new_row);
							classer();	
					} else {
						alert( "Ce CD (#+"cd.cd"+) ne peut pas être ajouté à la liste (déjà présent dans cette liste)." );
					};
				}
			})
				  .fail(function() {
				    alert( "CD non trouvé" );
				  });
			event.preventDefault();
			$("#newCD").val("");
		});


		function deleteRow (cd) {
			$("#row_"+cd).remove();
			classer();
		}

		$("#airplay_form").submit(function(event){
			$("#classement").val("");
			$("#sort_A .num_cd").each(function(){
				$("#classement").val($("#classement").val()+$(this).html()+",");
			});
		});
	</script>
{% endblock %}